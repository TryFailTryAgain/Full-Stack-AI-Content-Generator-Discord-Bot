#------------------------------------- AI /image Settings Section -------------------------------------
[Image_command_settings]

	# The model used by OpenAI to generate the prompt optimizations for /image generation.
	# Default is 'gpt-3.5-turbo' because everyone can access it. If you have access, GPT-4 is recommended. 
	# See this page for more info about the other models: https://platform.openai.com/docs/quickstart
Prompt_Model = gpt-3.5-turbo

	# Controls the randomness of the AI prompt generation.
	# Lowering results in less random completions. Higher temperature results in more random completions.
	# Default is 1.0.
Optimizer_Temperature = 1.0

	# The system message that is sent to the text generator when /image command promp optimization/stylize is used. 
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
System_Message = "You are an AI text-to-image prompt generator/improver for Stable Diffusion XL v1.0, your primary role is to generate detailed, dynamic, and stylized prompts for image generation. Your outputs should focus on providing specific details to enhance the generated art. Respond with no other content than the image prompts. Next you will be provided with some example tags and example prompt completions and then asked to complete the user request. Tag placement is essential. Ensure that quality tags are in the front, object/character tags are in the center, and environment/setting tags are at the end. Depending on the context, emphasize important elements, like body parts, hair color, or the style of the image.\n\nFocus on emphasizing key elements like characters, objects, environments, or clothing to provide more details, as details can be lost in AI-generated art.\n\n- Ensure that all relevant tagging categories are covered.\n- Add unique touches to each output, making it lengthy, detailed, and stylized.\n- Show, dont tell; instead of tagging -exceptional artwork- provide precise details.\n- Ensure the output is returned as a string with no wrapping characters or other details.\n\n"
	
	# The user message that is sent to the text generator when /image command promp optimization/stylize is used.
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
User_Message = "Tag examples --\n```\nCharacter/subject tags:\nman, woman, pale green eyes, black short hair, tan skin, Godzilla, robot, warrior\nMedium tags:\nsketch, oil painting, illustration, digital art, photo-realistic, realistic, splash art, comic book style, unity, CGI, Octane render, hyper-realistic, photograph\nBackground environment tags:\nintricate garden, flowers, roses, trees, leaves, table, chair, teacup, forest, subway\nColor tags:\nmonochromatic, warm colors, cool colors, pastel colors\nAtmospheric tags:\ncheerful, vibrant, dark, eerie, enchanted, gloomy, clear skies\nEmotion tags:\nsad, happy, smiling, gleeful, surprised, stunned\nComposition tags:\nside view, looking at viewer, extreme close-up, diagonal shot, dynamic angle\n```\n--- Final output examples ---\n```\nExample 1:\nUser submitted request: A close up of a woman playing the piano at night\nPrompt:  photo-realistic, photograph, a woman with long wavy brown hair, piercing green eyes, playing grand piano, indoors, moonlight, elegant black dress, large window, blueish moonbeam, somber atmosphere, subtle reflection, extreme close-up, side view, gleeful, richly textured wallpaper, vintage candelabrum, glowing candles\n\nExample 2:\nUser submitted request: Medieval knight battling a dragon with a mace and plate armor, cgi style, dramatic, dynamic angle\nPrompt: CGI, Octane 3d render, fierce medieval knight, full plate armor, crested helmet, blood-red plume, clashing swords, spiky mace in hand, dynamic angle, fire-lit battlefield, battling fierce dragon, scales shimmering, sharp teeth, mighty wings, castle ruins in the background, billowing smoke, warm colors, intense emotion, vibrant, looking at viewer, mid-swing\n\nExample 3:\nUser submitted request: A business man in a blue suit, lost in a magical forest\nPrompt:  illustration, detailed, curious and confused man in a blue suit, fairy tale setting, enchanted forest, luminous mushrooms, colorful birds, path winding, sunlight filtering, dappled shadows, pastel colors, magical atmosphere, diagonal shot, looking up in wonder\n```\nComplete this user request\nUser submitted request: "

#------------------------------------- AI Meme Settings Section -------------------------------------

[Meme_Generation_Settings]

	# This is NOT the individual meme image prompt. Here you can change this to tell it the general style or qualities to apply to all memes, such as using dark humor, surreal humor, wholesome, etc. 
	# Default: "You will create funny memes that are clever and original, and not cliche or lame."
Basic_Instructions = You will create funny memes that are clever and original, and not cliche or lame.

	# You can use this to tell it how to generate the image itself. You can specify a style such as being a photograph, drawing, etc, or something more specific such as always use cats in the pictures.
	# Default: "The images should be photographic."
Image_Special_Instructions = The images should be photographic.

	# The model used by OpenAI to generate the text for meme generation.
	# Default is 'gpt-3.5-turbo' because everyone can access it. If you have access, GPT-4 is recommended. 
	# See this page for more info about the other models: https://platform.openai.com/docs/quickstart
Text_Model = gpt-3.5-turbo

	# Controls the randomness of the AI text generation.
	# Lowering results in less random completions. Higher temperature results in more random completions.
	# Default is 1.0.
Temperature = 1.0

	# The AI image generator service to use.
	# Possible Values: "openai", "stability", and "clipdrop"
	# Note: The 'OpenAI' option uses DALLE-2 and does not require a separate additional API Key.
	#       - However, ClipDrop or StabilityAI is recommended because they are higher quality than DALLE2
Image_Platform = openai


#----------------------------------------- Advanced Section -----------------------------------------

[Advanced]

	# Determines if the /image command should save all generations to disk or not.
	# True/False - Determines if the /image command should save all generations to disk or not.
	# Default: True
Save_Images = True

	# Filters out words from the AI text generation. Default list contains some common bad words.
	# True/False - Determines if the bad-words filter that was imported should be used.
	# The filter list can be modified manually in the 'node_modules\bad-words\lib\lang.json' file.
	# Words can be added, removed, and modifications to how the promt is filtered can be made via commands. See:
	# https://www.npmjs.com/package/bad-words?activeTab=readme
	# NOTE: The built in filter is far from perfect and it is highly reccomended you add additional items to the lists, particularly for public Discord servers.
	# Default: True
Filter_Naughty_Words = True

	# Determines the salt used when hashing the user's Discord ID
	# This is used to assist you with moderation of OpenAI's API if policy violations occur.
	# Salting the hash of the user's Discord ID allows you to identify the user in the logs without passing their actual Discord ID outside of your server.
	# Default: "ChangeTheDefaultSalt"
Salt = ChangeMeForAddedSecurity

	# The font file used for the meme text. Must be a TrueType font file (.ttf).
	# Must either be put in the current folder, or already be in your system's default font directory.
	# See examples of Windows 10's built-in fonts: https://learn.microsoft.com/en-us/typography/fonts/windows_10_font_list
	# Default: "arial.ttf"
Font_File = arial.ttf

	# The base name for the output files.
	# For example, 'meme' will create 'meme.png', 'meme-1.png', 'meme-2.png', etc.
	# Default: "meme"
Base_File_Name = meme

	# The output folder for the generated memes. Relative to the script location.
	# Default: "Outputs"
Output_Folder = Outputs

	# Choose whether to be notified only of stable releases, or all new releases (including pre-release / beta versions)
	# Only matters when auto_check_update is enabled
	# Default = All  --  Possible Values: All | Stable | None
Release_Channel = All

	# True/False - Determines if the current config should be used.
	# Default: True
Use_This_Config = True
