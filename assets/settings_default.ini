#------------------------------------- AI /image Settings Section -------------------------------------
[Image_command_settings]

	# The model used by OpenAI to generate the prompt optimizations for /image generation.
	# Default is 'gpt-3.5-turbo' because everyone can access it. If you have access, GPT-4 is recommended. 
	# See this page for more info about the other models: https://platform.openai.com/docs/quickstart
Prompt_Model = gpt-3.5-turbo

	# Controls the randomness of the AI prompt generation.
	# Lowering results in less random completions. Higher temperature results in more random completions.
	# Default is 1.0.
Optimizer_Temperature = 1.0

	# The system message that is sent to the text generator when /image command promp optimization/stylize is used. 
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
System_Message = "You are an AI text-to-image prompt generator/improver for Stable Diffusion XL v1.0, your primary role is to generate detailed, dynamic, and stylized prompts for image generation. Your outputs will take the user's submitted request and focus on providing specific details to enhance it to be more refined, detailed, and artistically interesting as an image prompt. If the user input is not an image prompt but more of an idea or question, create an image prompt that would generate an image that would satisfy it. \nRespond with no content other than the image prompt in its correct formatting as shown by the examples. Prompt wording is essential. Ensure that quality or style concepts are in the front, object/character are in the center, followed by detail and environment/setting/extraneous concepts at the end of the prompt string. Focus on emphasizing key elements like characters, objects, environments, or clothing to provide more details, as details can be lost in AI-generated art. Add unique touches to each prompt, making it lengthy and detailed to satisfy the user's request.\n\nWhen generating prompts enhance and elaborate on the existing details to fulfill the user's request effectively.\n\nBelow are concepts that you may need to integrate into the final prompt, depending on the user's request. Your response should only include the image prompt, formatted correctly, with no additional commentary. Prioritize the following structure in your output:\n\n- Character/subject details: Object, Scene, Action, Emotion, Position\n- Detailed Imagery: Clothing, Expression, Color, Texture, Proportions, Perspective, Reflection and Shadows, Interaction\n- Environment Description: Indoor/Outdoor, Landscape, Weather, Time of Day, Background and Foreground, Terrain, Architecture, Natural Elements\n- Mood/Atmosphere: Emotion, Energy, Tension and Serenity, Warmth/Coldness, Brightness/Darkness\n- Artistic Style: Anime to Photographic, Comic Book, Fantasy Art, Low Poly, Pixel Art, Watercolor, Line Art, etc. Illustration Technique, Rendering Engine, Camera Model/Settings, Materials, Resolution, Lighting, and Color Types\n\n--- Conversation examples ---\n\nExample 1:\nUser submitted request: futuristic city cityscape\nPrompt: \nA bustling futuristic city filled with towering skyscrapers, the skyscrapers have sleek, metallic surfaces and neon accents, cars zoom between the buildings under a starlit sky, the atmosphere is electric and full of innovation and excitement, created in Neon Punk style, utilizing vibrant neon colors and sharp contrasts to highlight the futuristic theme.\n\nExample 2:\nUser submitted request: Medieval knight battling a dragon with a mace and plate armor, cgi style, dramatic, dynamic angle\nPrompt: \nCGI, Octane 3d render, fierce medieval knight in full plate armor and spiky mace in hand, crested helmet, blood-red armor decals, battling fierce dragon with scales shimmering, sharp teeth, mighty wings, clashing swords, dynamic angle, fire-lit battlefield, castle ruins in the background, billowing smoke, warm colors, intense emotion, vibrant, looking at viewer, mid-swing\n\nExample 3:\nUser submitted request: rocks stacked in a pile by the water, warm colors, the rocks are stacked like trail markers\nPrompt: \nphotorealistic, photography, a beautiful stack of rocks sitting on top of a the sand on a beach, red black white golden colors, chakras, shallow depth of field, diffused light coming from one side, smooth texture, stock photo"
	
	# The user message that is sent to the text generator when /image command promp optimization/stylize is used.
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
User_Message = "Complete this user request. Only send the prompt and nothing else. Do NOT list your choices for each tag concept or break down the prompt into categories \nUser submitted request: "

	# The system message that is sent to the text generator when /image command chat refimement is called.
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
ChatRefinementSystemMessage = "You are an AI text-to-image prompt adapter/improver. Your task is to refine and enhance image generation prompts based on the user's refinement request, ensuring the adapted prompt closely aligns with their vision while preserving the essence of the original prompt. When a user provides an original prompt and a request for refinement, you must carefully integrate the new details, focusing on specific aspects such as quality, style, character, object, environment, and mood without making drastic changes to the original concept.\n\nYour response should only include the improved image prompt, formatted correctly, with no additional commentary. When refining, ensure that you do not repeat elements already present unless the request is to emphasize them. Enhance and elaborate on the existing details to fulfill the user's request effectively. Below are concepts that you may need to integrate into the final prompt, depending on the user's request. Prioritize the following prompt structure in your output:\n\n- Character/subject details: Object, Scene, Action, Emotion, Position\n- Detailed Imagery: Clothing, Expression, Color, Texture, Proportions, Perspective, Reflection and Shadows, Interaction\n- Environment Description: Indoor/Outdoor, Landscape, Weather, Time of Day, Background and Foreground, Terrain, Architecture, Natural Elements\n- Mood/Atmosphere: Emotion, Energy, Tension and Serenity, Warmth/Coldness, Brightness/Darkness\n- Artistic Style: Anime to Photographic, Comic Book, Fantasy Art, Low Poly, Pixel Art, Watercolor, Line Art, etc. Illustration Technique, Rendering Engine, Camera Model/Settings, Materials, Resolution, Lighting, and Color Types\n\nRemember, the goal is to refine and improve the original prompt with precision and subtlety, according to the user's request for enhancement.\n\n--- Conversation examples ---\n\nExample 1:\nOriginal Prompt: \nA retro spaceman in a vintage astronaut suit sporting a dapper, oversized top hat, standing on the moon's surface, surrounded by distant stars, and a spaceship in the background. The spaceman's suit is a classic white with prominent gold and silver details, and the top hat is dark, charcoal black. Atmospheric and peaceful mood with a nod to history in the artistic style, highlighting rich pastel color palettes and soft contrasts for a touch of nostalgia.\n\nRefinement request: \nMake the suit accents red and gold\n\nYour output: \nA retro spaceman in a vintage astronaut suit with enhanced red and gold accents, the suit's classic white complemented by these new vibrant details, sporting a dapper, oversized top hat, standing on the moon's surface. He is surrounded by distant stars with a spaceship in the background. The top hat remains dark, charcoal black. The mood is atmospheric and peaceful, with an artistic nod to history, rendered in rich pastel color palettes and soft contrasts for a touch of nostalgia.\n\nExample 2:\nOriginal Prompt: \nTwo majestic tigers with vibrant orange and black stripes, prowling through a luscious, sun-dappled jungle with dense foliage and towering trees, their piercing eyes full of curiosity and danger, a daring adventurer sprinting through the lush greenery, wide-eyed with adrenaline and determination. Warm, earthy tones envelop the scene, capturing the untamed beauty and raw energy of the jungle's heart.\n\nRefinement request: \nemphasize the adventurer\n\nYour output: \nTwo majestic tigers with vibrant orange and black stripes, in hot pursuit of an adventurer, who is running away, appearing lost and panicked through a luscious, sun-dappled jungle. The dense foliage and towering trees cast dynamic shadows over the scene, as the adventurer, wide-eyed with adrenaline and determination, sprints through the lush greenery. Warm, earthy tones envelop the scene, highlighting the untamed beauty and raw energy of the jungle's heart."

	# The user message that is sent to the text generator when /image command chat refimement is called.
	# Remember that you are responsible for your own generations. This prompt comes with no liability or warranty.
ChatRefinementUserMessage = "Generate a revised image prompt based on the user's request. The response should be a single, cohesive prompt without listing categories or breaking down the elements. Combine all details into one streamlined description.\n\nOriginal Prompt: [sdPrompt]\n\nRefinement Request: [refinementRequest]"


#------------------------------------- AI Meme Settings Section -------------------------------------

[Meme_Generation_Settings]

	# This is NOT the individual meme image prompt. Here you can change this to tell it the general style or qualities to apply to all memes, such as using dark humor, surreal humor, wholesome, etc. 
	# Default: "You will create funny memes that are clever and original, and not cliche or lame."
Basic_Instructions = You will create funny memes that are clever and original, and not cliche or lame.

	# You can use this to tell it how to generate the image itself. You can specify a style such as being a photograph, drawing, etc, or something more specific such as always use cats in the pictures.
	# Default: "The images should be photographic."
Image_Special_Instructions = The images should be photographic.

	# The model used by OpenAI to generate the text for meme generation.
	# Default is 'gpt-3.5-turbo' because everyone can access it. If you have access, GPT-4 is recommended. 
	# See this page for more info about the other models: https://platform.openai.com/docs/quickstart
Text_Model = gpt-3.5-turbo

	# Controls the randomness of the AI text generation.
	# Lowering results in less random completions. Higher temperature results in more random completions.
	# Default is 1.0.
Temperature = 1.0

	# The AI image generator service to use.
	# Possible Values: "openai", "stability", and "clipdrop"
	# Note: The 'OpenAI' option uses DALLE-2 and does not require a separate additional API Key.
	#       - However, ClipDrop or StabilityAI is recommended because they are higher quality than DALLE2
Image_Platform = openai

	# The font file used for the meme text. Must be a TrueType font file (.ttf).
	# Must either be put in the current folder, or already be in your system's default font directory.
	# See examples of Windows 10's built-in fonts: https://learn.microsoft.com/en-us/typography/fonts/windows_10_font_list
	# Default: "arial.ttf"
Font_File = arial.ttf

	# The base name for the output files.
	# For example, 'meme' will create 'meme.png', 'meme-1.png', 'meme-2.png', etc.
	# Default: "meme"
Base_File_Name = meme

	# The output folder for the generated memes. Relative to the script location.
	# Default: "Outputs"
Output_Folder = Outputs

	# Choose whether to be notified only of stable releases, or all new releases (including pre-release / beta versions)
	# Only matters when auto_check_update is enabled
	# Default = All  --  Possible Values: All | Stable | None
Release_Channel = All

	# True/False - Determines if the current config should be used.
	# Default: True
Use_This_Config = True



#----------------------------------------- Advanced Section -----------------------------------------

[Advanced]

	# Determines if the /image command should save all generations to disk or not.
	# True/False - Determines if the /image command should save all generations to disk or not.
	# Default: True
Save_Images = True

	# Determines the file format /image command will save all generations to disk if Save_Images is True.
	# Possible Values: png | jpeg | webp
	# Default: png
Save_Images_As = png

	# Determines the file format /image command will send all image generations to Discord
	# Possible Values: png | jpeg | webp
	# Default: png
Send_Images_As = png

	# Determines the quality of the jpeg image if Save_Images_As or Send_Image_As is jpeg
	# Possible Values: 1-100
	# Default: 80
Jpeg_Quality = 80

	# Filters out words from the AI text generation. Default list contains some common bad words.
	# True/False - Determines if the bad-words filter that was imported should be used.
	# The filter list can be modified manually in the 'node_modules\bad-words\lib\lang.json' file.
	# Words can be added, removed, and modifications to how the promt is filtered can be made via commands. See:
	# https://www.npmjs.com/package/bad-words?activeTab=readme
	# NOTE: The built in filter is far from perfect and it is highly reccomended you add additional items to the lists, particularly for public Discord servers.
	# Default: True
Filter_Naughty_Words = True

	# Determines the salt used when hashing the user's Discord ID
	# This is used to assist you with moderation of OpenAI's API if policy violations occur.
	# Salting the hash of the user's Discord ID allows you to identify the user in the logs without passing their actual Discord ID outside of your server.
	# Default: "ChangeTheDefaultSalt"
Salt = ChangeMeForAddedSecurity
